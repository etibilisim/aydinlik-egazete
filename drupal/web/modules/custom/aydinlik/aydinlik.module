<?php

use Drupal\Core\Messenger;
use Drupal\Core\Url;
use Drupal\user\UserInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\user\Entity\User;
use Drupal\commerce_cart\CartManagerInterface;
use Drupal\Core\Messenger\MessengerTrait;
use Drupal\Core\StringTranslation\StringTranslationTrait;
use Drupal\commerce_order\Entity\Order;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_user_login().
 */

function aydinlik_user_login(UserInterface $account) {
  global $base_url;
  $current_user = User::load(\Drupal::currentUser()->id());
  $user_edit_form = Url::fromRoute('entity.user.edit_form', ['user' => \Drupal::currentUser()->id()])->toString();
  $messenger = \Drupal::messenger();
  $dateTime = \DateTime::createFromFormat('Y-m-d H:i:s',date('Y-m-d H:i:s'));
  $fabt = $current_user->field_abonelik_bitis_tarihi->value;
  $today = date("Y-m-d H:i:s");
  $fabt = date("Y-m-d H:i:s", strtotime($fabt));
  $uid = \Drupal::currentUser()->id();
  if ($current_user->field_abonelik_durumu->value == 'Aktif'){
    $src = $current_user->field_abonelik_referans_kodu->value;
    if ($fabt <= $today ) {
      $request = new \Iyzipay\Request\Subscription\SubscriptionDetailsRequest();
      $request->setSubscriptionReferenceCode($src);
      $result = \Iyzipay\Model\Subscription\SubscriptionDetails::retrieve($request,Drupal\iyzipay\Config::options());
      $orders=$result->getOrders();
      $last_payment = $orders[count($orders)-1]->paymentAttempts[0]->paymentStatus;
      $ppn = $result->getPricingPlanName(); //$ppn is pricing plan name
      if ($last_payment == 'SUCCESS') {
        if (str_contains ($ppn, 'Aylık')) {
          $fabt = date('Y-m-d\TH:i:s', strtotime('1 month',strtotime($current_user->field_abonelik_bitis_tarihi[0]->value)));
          $current_user->save();
          $messenger->addMessage('Aylık aboneliğiniz başarılı bir şekilde uzatılmıştır. Keyifli okumalar dileriz');
        }
        if (str_contains ($ppn, 'Yıllık')) {
          $fabt = date('Y-m-d\TH:i:s', strtotime('1 month',strtotime($current_user->field_abonelik_bitis_tarihi[0]->value)));
          $current_user->field_abonelik_bitis_tarihi[0]->value = $fabt;
          $current_user->save();
          $messenger->addMessage('Yıllık aboneliğiniz başarılı bir şekilde uzatılmıştır. Keyifli okumalar dileriz');
        }
      }
      else {
        $current_user->field_abonelik_durumu->value = 'Yenileme bekliyor';
        $current_user->removeRole('abone');
        $current_user->save();
        $messenger->addWarning('Aboneliğinizin uzatılması sırasında bir hata oluşmuştur. Lütfen bizimle iletişime geçiniz.');
      }
    }
  }
  $taahhut_tarihi = $current_user->field_taahhut_tarihi->value;
  if ($taahhut_tarihi != null) {
    $taahhut_bitis = strtotime('1 year',strtotime($taahhut_tarihi));
    $taahhut_bitis = date('Y-m-d' ,$taahhut_bitis );
    if ($today > $taahhut_bitis ) {
      $current_user->field_taahhut_tarihi->value = '';
      $messenger->addWarning('Aboneliğinizin taahhüt süresi dolmuştur. Taahhütlü aboneliğin ayrıcalıklarından yararlanmak için bir sonraki siparişinizde taahhüt vermeyi unutmayın.');
      $current_user->save();
    }
  }
  if ($current_user->field_adres->country_code == 'TR' || $current_user->field_adres->country_code == '' ) {
    if (!$current_user->hasRole('yurtici_abone') || !$current_user->hasRole('yurtdisi_abone') || !$current_user->hasRole('ogrenci_abone')){
      $current_user->addRole('yurtici_abone');
      $current_user->save();
    }
  }
  else {
    if (!$current_user->hasRole('yurtici_abone') || !$current_user->hasRole('yurtdisi_abone') || !$current_user->hasRole('ogrenci_abone')){
      $current_user->addRole('yurtdisi_abone');
      $current_user->save();
    }
  }
  $ad = $current_user->field_adiniz->value;
  $soyad = $current_user->field_soyadiniz->value;
  $telefon = $current_user->field_telefon->value;
  $ulke = $current_user->field_adres->country_code;
  $ilce = $current_user->field_adres->locality;
  $il = $current_user->field_adres->administrative_area;
  $fields = array($ad, $soyad, $telefon, $ulke, $ilce, $il);
  $field_names = array ('field_adiniz', 'field_soyadiniz', 'field_telefon', 'field_adres', 'field_adres', 'field_adres');
  /* for ($i = 0; $i<6; $i++) {
    if ($fields[$i] == NULL){
      $field_name = $field_names[$i];
      $field_label = $current_user->$field_name->getFieldDefinition()->getLabel();
      $messenger->addError('Kullanıcı profilinizde ' . $field_label . ' alanı eksik.Eğer doğrudan kullanıcı profilinize yönlendirilmediyseniz lütfen yukarıdaki "HESABIM" yazısına tıkladıktan sonra gelen ekranda "DÜZENLE" yazısına tıklayarak profilinizde eksik olan alanları doldurunuz.(Doldurumlası gereken zorunlu alanın adı: '. $field_label.')');
      $response = new RedirectResponse($base_url.$user_edit_form);
      $response->send();
    }
  } */
  if ($fabt < $today && $current_user->field_abonelik_bitis_tarihi->value != '') {
    \Drupal::messenger()->addError(t('Abonelik süreniz dolmuştur. Aboneliğinizi uzatmak için lütfen yukarıdaki Satın Al düğmesine tıklayın.'));
    if ($current_user->hasRole('abone'))  {
      $current_user->removeRole('abone');
      $current_user->save();
    }
  }

  $cartManager = \Drupal::service('commerce_cart.cart_manager');
  $store = \Drupal\commerce_store\Entity\Store::load(1);
  $order_type = 'default';
  $cart_provider = \Drupal::service('commerce_cart.cart_provider');
  $cart = $cart_provider->getCart($order_type, $store);
  if (!empty($cart)) {
    $cartManager->emptyCart($cart);
    $order_id = $cart->order_id;
    $order = Order::load($order_id->value);
    $order->delete();
  }
}
